(function(){"use strict";angular.module("ml.search",["ml.common"]).constant("ml.search.version","0.2.9")})();var superCtrl=MLSearchController.prototype;MLRemoteSearchController.prototype=Object.create(superCtrl);function MLRemoteSearchController($scope,$location,mlSearch,remoteInput){"use strict";if(!(this instanceof MLRemoteSearchController)){return new MLRemoteSearchController($scope,$location,mlSearch,remoteInput)}MLSearchController.call(this,$scope,$location,mlSearch);this.remoteInput=remoteInput}(function(){"use strict";MLRemoteSearchController.prototype.init=function init(){var self=this;var unsubscribe=this.remoteInput.subscribe(function(input){if(self.qtext!==input){self.qtext=input;self.search()}});this.remoteInput.mlSearch=this.mlSearch;this.qtext=this.remoteInput.input;this.$scope.$on("$destroy",unsubscribe);return superCtrl.init.apply(this,arguments)};MLRemoteSearchController.prototype.updateSearchResults=function updateSearchResults(data){superCtrl.updateSearchResults.apply(this,arguments);this.remoteInput.setInput(this.qtext);return this}})();function MLSearchController($scope,$location,mlSearch){"use strict";if(!(this instanceof MLSearchController)){return new MLSearchController($scope,$location,mlSearch)}this.$scope=$scope;this.$location=$location;this.mlSearch=mlSearch;this.searchPending=false;this.page=1;this.qtext="";this.response={}}(function(){"use strict";MLSearchController.prototype.init=function init(){this.$scope.$on("$locationChangeSuccess",this.locationChange.bind(this));if(this.parseExtraURLParams){this.parseExtraURLParams()}return this.mlSearch.fromParams().then(this._search.bind(this))};MLSearchController.prototype.locationChange=function locationChange(e,newUrl,oldUrl){var self=this,shouldUpdate=false;if(this.parseExtraURLParams){shouldUpdate=this.parseExtraURLParams()}return this.mlSearch.locationChange(newUrl,oldUrl).then(this._search.bind(this),function(){if(shouldUpdate){self._search()}})};MLSearchController.prototype._search=function _search(){this.searchPending=true;var promise=this.mlSearch.search().then(this.updateSearchResults.bind(this));this.updateURLParams();return promise};MLSearchController.prototype.updateSearchResults=function updateSearchResults(data){this.searchPending=false;this.response=data;this.qtext=this.mlSearch.getText();this.page=this.mlSearch.getPage();return this};MLSearchController.prototype.updateURLParams=function updateURLParams(){var params=_.chain(this.$location.search()).omit(this.mlSearch.getParamsKeys()).merge(this.mlSearch.getParams()).value();this.$location.search(params);if(this.updateExtraURLParams){this.updateExtraURLParams()}return this};MLSearchController.prototype.search=function search(qtext){if(arguments.length){this.qtext=qtext}this.mlSearch.setText(this.qtext).setPage(this.page);return this._search()};MLSearchController.prototype.reset=function reset(){this.mlSearch.clearAllFacets().clearAdditionalQueries().clearBoostQueries();this.qtext="";this.page=1;return this._search()};MLSearchController.prototype.toggleFacet=function toggleFacet(facetName,value){this.mlSearch.toggleFacet(facetName,value);return this._search()};MLSearchController.prototype.toggleNegatedFacet=function toggleNegatedFacet(facetName,value){this.mlSearch.toggleFacet(facetName,value,true);return this._search()};MLSearchController.prototype.showMoreFacets=function showMoreFacets(facet,facetName,step){return this.mlSearch.showMoreFacets(facet,facetName,step)};MLSearchController.prototype.clearFacets=function clearFacets(){this.mlSearch.clearAllFacets();return this._search()};MLSearchController.prototype.suggest=function suggest(qtext,options){return this.mlSearch.suggest(qtext,options).then(function(res){return res.suggestions||[]})}})();(function(){"use strict";angular.module("ml.search").directive("mlChiclets",mlChiclets);function mlChiclets(){return{restrict:"E",scope:{activeFacets:"=",toggle:"&"},templateUrl:template,link:link}}function template(element,attrs){var url;if(attrs.template){url=attrs.template}else{url="/templates/ml-chiclets.html"}return url}function link($scope,element,attrs){$scope.truncateLength=parseInt(attrs.truncate,10)||20}})();(function(){"use strict";angular.module("ml.search").filter("duration",durationFilter).directive("mlDuration",mlDuration);function durationFilter(){return function(duration,options){duration=_.isObject(duration)?duration:parseDuration(duration);var result=[];var _options={year:"year",years:"years",month:"month",months:"months",week:"week",weeks:"weeks",day:"day",days:"days",hour:"hour",hours:"hours",minute:"minute",minutes:"minutes",second:"second",seconds:"seconds"};angular.extend(_options,options);_.each(["year","month","week","day","hour","minute","second"],function(category){var plural=category+"s";if(duration[plural]){result.push(duration[plural]+" "+(duration[plural]>1?_options[plural]:_options[category]))}});if(result.length>1){var last=result.splice(result.length-1,1);result=result.join(", ")+", and "+last[0];return result}else{return result[0]||"0 seconds"}}}function mlDuration(){return{restrict:"A",transclude:true,scope:{mlDuration:"="},link:link}}function link($scope,element,attrs,ctrl,transclude){$scope.$watch("mlDuration",function(newVal,oldVal){if(newVal){angular.extend($scope,{duration:parseDuration(newVal)})}});transclude($scope,function(clone){element.append(clone)})}function parseDuration(duration){var pattern=["P(","(([0-9]*\\.?[0-9]*)Y)?","(([0-9]*\\.?[0-9]*)M)?","(([0-9]*\\.?[0-9]*)W)?","(([0-9]*\\.?[0-9]*)D)?",")?","(T","(([0-9]*\\.?[0-9]*)H)?","(([0-9]*\\.?[0-9]*)M)?","(([0-9]*\\.?[0-9]*)S)?",")?"],regex=new RegExp(pattern.join("")),matches=duration.match(regex);return{years:parseFloat(matches[3])||null,months:parseFloat(matches[5])||null,weeks:parseFloat(matches[7])||null,days:parseFloat(matches[9])||null,hours:parseFloat(matches[12])||null,minutes:parseFloat(matches[14])||null,seconds:parseFloat(matches[16])||null,toString:function(){return duration}}}})();(function(){"use strict";angular.module("ml.search").directive("mlFacets",mlFacets).controller("mlFacetsController",["$scope","$filter",mlFacetsController]);function mlFacets(){return{restrict:"E",controller:"mlFacetsController",scope:{activeFacets:"=",facets:"=",toggle:"&",negate:"&",showMore:"&"},templateUrl:template,link:link}}function template(element,attrs){var url;if(attrs.template){if(attrs.template==="inline"){url="/templates/ml-facets-inline.html"}else{url=attrs.template}}else{url="/templates/ml-facets.html"}return url}function link($scope,element,attrs){$scope.truncateLength=parseInt(attrs.truncate,10)||20;$scope.shouldShowMore=!!attrs.showMore;$scope.shouldNegate=!!attrs.negate&&!!attrs.activeFacets}function mlFacetsController($scope,$filter){$scope.filter=$filter("filter")}})();(function(){"use strict";angular.module("ml.search").directive("mlInput",mlInput);function mlInput(){return{restrict:"E",scope:{qtext:"=",search:"&",suggest:"&"},templateUrl:template,link:link}}function template(element,attrs){var url;if(attrs.template){if(attrs.template==="fa"){url="/templates/ml-input-fa.html"}else{url=attrs.template}}else{url="/templates/ml-input.html"}return url}function link($scope,element){$scope.clear=function(){$scope.search({qtext:""})}}})();(function(){"use strict";angular.module("ml.search").directive("mlMetrics",mlMetrics);var $window=null;mlMetrics.$inject=["$window"];function mlMetrics($injectWindow){$window=$injectWindow;return{restrict:"E",replace:true,transclude:true,templateUrl:"/templates/ml-metrics.html",scope:{search:"=",showDuration:"=?"},link:link}}function link($scope,element,attrs,ctrl,transclude){if($scope.showDuration===undefined){$scope.showDuration=true}$scope.$watch("search",function(search){angular.extend($scope,parseSearch(search))});transclude($scope,function(clone){if(clone.length){element.replaceWith(clone)}})}function parseSearch(search){return{total:search.total,start:search.start,pageLength:search["page-length"],pageEnd:$window.Math.min(search.start+search["page-length"]-1,search.total),metrics:search.metrics}}})();(function(){"use strict";angular.module("ml.search").directive("mlRemoteInput",mlRemoteInput).controller("MLRemoteInputController",MLRemoteInputController);function mlRemoteInput(){return{restrict:"E",controller:"MLRemoteInputController",scope:{searchCtrl:"@",template:"@"},template:template}}function template(element,attrs){var tpl="";if(attrs.template){tpl=' template="'+attrs.template+'"'}return'<ml-input qtext="qtext" search="search(qtext)" '+'suggest="suggest(val)"'+tpl+"></ml-input>"}MLRemoteInputController.$inject=["$scope","$location","MLSearchFactory","MLRemoteInputService"];function MLRemoteInputController($scope,$location,factory,remoteInput){var mlSearch=factory.newContext(),searchPath;$scope.qtext=remoteInput.input;remoteInput.initInput($scope,mlSearch);$scope.$watch("searchCtrl",function(val){var oldSearchPath=searchPath;val=val||"SearchCtrl";searchPath=remoteInput.getPath(val);if(oldSearchPath&&searchPath!==oldSearchPath){$scope.search("")}});$scope.search=function search(qtext){$location.path(searchPath);remoteInput.setInput(qtext)};$scope.suggest=function suggest(val){mlSearch=remoteInput.mlSearch||mlSearch;return mlSearch.suggest(val).then(function(res){return res.suggestions||[]})}}})();(function(){"use strict";angular.module("ml.search").directive("mlResults",mlResults);function mlResults(){return{restrict:"E",scope:{qtext:"=",results:"=",click:"&",link:"&",label:"&"},templateUrl:template,link:link}}function template(element,attrs){var url;if(attrs.template){url=attrs.template}else{url="/templates/ml-results.html"}return url}function link(scope,element,attrs){scope.shouldClick=!!attrs.click;if(!attrs.link){scope.link=function(result){return"/detail?uri="+encodeURIComponent(result.result.uri)}}if(!attrs.label){scope.label=function(result){return _.last(result.result.uri.split("/"))}}scope.$watch("results",function(newVal,oldVal){_.each(newVal,function(result){result.link=scope.link({result:result});result.label=scope.label({result:result})})})}})();(function(){"use strict";angular.module("ml.search").service("MLRemoteInputService",MLRemoteInputService);MLRemoteInputService.$inject=["$injector"];function MLRemoteInputService($injector){var service=this,$route=null;this.routeAvailable=true;try{$route=$injector.get("$route")}catch(ex){this.routeAvailable=false}service.input="";service.mlSearch=null;service.callbacks=[];function unsubscribe(idx){service.callbacks.splice(idx)}service.setInput=function setInput(input){service.input=input;_.each(service.callbacks,function(callback){callback(service.input)})};service.subscribe=function subscribe(callback){var idx=service.callbacks.length;service.callbacks.push(callback);return function(){unsubscribe(idx)}};service.initInput=function initInput($scope,mlSearch){var unsubscribe=service.subscribe(function(input){$scope.qtext=input;mlSearch=service.mlSearch||mlSearch});$scope.$on("destroy",unsubscribe)};service.initCtrl=function initCtrl($scope,model,mlSearch,searchCallback){var unsubscribe=service.subscribe(function(input){if(model.qtext!==input){model.qtext=input;searchCallback()}});$scope.$on("$destroy",unsubscribe);service.mlSearch=mlSearch;if(model.qtext.length&&!service.input.length){service.setInput(model.qtext)}else{model.qtext=service.input}};service.getPath=function getPath(searchCtrl){var route={originalPath:"/"},matches=null;if($route===null){return null}matches=_.filter($route.routes,{controller:searchCtrl});if(matches.length===0){console.error("can't find Search controller: "+searchCtrl)}else{route=matches[0];if(matches.length>1){console.log("multiple Search controller routes; choosing '"+route.originalPath+"'")}}return route.originalPath}}})();(function(){"use strict";var $q=null,$location=null,mlRest=null,qb=null;angular.module("ml.search").factory("MLSearchFactory",MLSearchFactory);MLSearchFactory.$inject=["$q","$location","MLRest","MLQueryBuilder"];function MLSearchFactory($injectQ,$injectLocation,$injectMlRest,$injectQb){$q=$injectQ;$location=$injectLocation;mlRest=$injectMlRest;qb=$injectQb;return{newContext:function newContext(options){return new MLSearchContext(options)}}}function MLSearchContext(options){this.qb=qb;this.results={};this.storedOptions={};this.activeFacets={};this.namespaces={};this.boostQueries=[];this.additionalQueries=[];this.searchTransform=null;this.qtext=null;this.start=1;this.options=_.merge(_.cloneDeep(this.defaults),options)}angular.extend(MLSearchContext.prototype,{defaults:{queryOptions:"all",suggestOptions:null,pageLength:10,snippet:"compact",sort:null,facetMode:"and",includeProperties:false,includeAggregates:false,params:{separator:":",qtext:"q",facets:"f",negatedFacets:"n",sort:"s",page:"p",prefix:null,prefixSeparator:null}},getActiveFacets:function getActiveFacets(){return this.activeFacets},getNamespacePrefix:function getNamespacePrefix(uri){return this.namespaces[uri]},getNamespaceUri:function getNamespacePrefix(prefix){return _.chain(this.namespaces).map(function(nsPrefix,uri){if(prefix===nsPrefix){return uri}}).compact().head().value()},getNamespaces:function getNamespaces(){var namespaces=[];_.forIn(this.namespaces,function(prefix,uri){namespaces.push({prefix:prefix,uri:uri})});return namespaces},setNamespaces:function setNamespaces(namespaces){_.each(namespaces,_.bind(this.addNamespace,this));return this},addNamespace:function addNamespace(namespace){this.namespaces[namespace.uri]=namespace.prefix;return this},clearNamespaces:function clearNamespaces(){this.namespaces={};return this},getBoostQueries:function getBoostQueries(){return this.boostQueries},addBoostQuery:function addBoostQuery(query){this.boostQueries.push(query);return this},clearBoostQueries:function clearBoostQueries(){this.boostQueries=[];return this},getAdditionalQueries:function getAdditionalQueries(){return this.additionalQueries},addAdditionalQuery:function addAdditionalQuery(query){this.additionalQueries.push(query);return this},clearAdditionalQueries:function clearAdditionalQueries(){this.additionalQueries=[];return this},getTransform:function getTransform(transform){return this.searchTransform},setTransform:function setTransform(transform){this.searchTransform=transform;return this},getText:function getText(){return this.qtext},setText:function setText(text){if(text!==""){this.qtext=text}else{this.qtext=null}return this},getPage:function getPage(){var page=Math.floor(this.start/this.options.pageLength)+1;return page},setPage:function setPage(page){page=parseInt(page,10)||1;this.start=1+(page-1)*this.options.pageLength;return this},getQueryOptions:function getQueryOptions(){return this.options.queryOptions},getSuggestOptions:function getSuggestOptions(){return this.options.suggestOptions},getPageLength:function getPageLength(){return this.options.pageLength},setPageLength:function setPageLength(pageLength){this.options.pageLength=pageLength;return this},getSnippet:function getSnippet(){return this.options.snippet},setSnippet:function setSnippet(snippet){this.options.snippet=snippet;return this},clearSnippet:function clearSnippet(){this.options.snippet=this.defaults.snippet;return this},getSort:function getSort(){return this.options.sort},setSort:function setSort(sort){this.options.sort=sort;return this},clearSort:function clearSort(){this.options.sort=this.defaults.sort;return this},getFacetMode:function getFacetMode(){return this.options.facetMode},setFacetMode:function setFacetMode(facetMode){this.options.facetMode=facetMode;return this},getParamsConfig:function getParamsConfig(){return this.options.params},getParamsKeys:function getParamsKeys(){var prefix=this.getParamsPrefix();return _.chain(this.options.params).omit(["separator","prefix","prefixSeparator"]).map(function(value){return prefix+value}).compact().value()},getParamsPrefix:function getParamsPrefix(){var prefix="";if(this.options.params.prefix!==null){prefix=this.options.params.prefix+(this.options.params.prefixSeparator||this.options.params.separator)}return prefix},getQuery:function getQuery(){var query=qb.and();if(_.keys(this.activeFacets).length){query=this.getFacetQuery()}if(this.boostQueries.length){query=qb.boost(query,this.boostQueries)}if(this.additionalQueries.length){query=qb.and(query,this.additionalQueries)}if(this.options.includeProperties){query=qb.or(query,qb.propertiesFragment(query))}query=qb.where(query);if(this.options.sort){query.query.queries.push(qb.ext.operatorState("sort",this.options.sort))}if(this.options.snippet){query.query.queries.push(qb.ext.operatorState("results",this.options.snippet))}return query},getFacetQuery:function getFacetQuery(){var self=this,queries=[],query={},constraintFn;_.forIn(self.activeFacets,function(facet,facetName){if(facet.values.length){constraintFn=function(facetValueObject){var constraintQuery=qb.ext.constraint(facet.type)(facetName,facetValueObject.value);if(facetValueObject.negated===true){constraintQuery=qb.not(constraintQuery)}return constraintQuery};queries=queries.concat(_.map(facet.values,constraintFn))}});if(self.options.facetMode==="or"){query=qb.or(queries)}else{query=qb.and(queries)}return query},getCombinedQuerySync:function getCombinedQuerySync(options){return qb.ext.combined(this.getQuery(),this.getText(),options)},getCombinedQuery:function getCombinedQuery(includeOptions){var combined=this.getCombinedQuerySync();if(!includeOptions){return $q.resolve(combined)}return this.getStoredOptions().then(function(data){combined.search.options=data.options;return combined})},isFacetActive:function isFacetActive(name,value){var active=this.activeFacets[name];return!!active&&!!_.find(active.values,{value:value})},isFacetNegated:function isFacetNegated(name,value){var active=this.activeFacets[name];if(!active){return false}var facet=_.find(active.values,{value:value});if(facet){return facet.negated}else{return false}},selectFacet:function selectFacet(name,value,type,isNegated){if(/^"(.*)"$/.test(value)){value=value.replace(/^"(.*)"$/,"$1")}var active=this.activeFacets[name],negated=isNegated||false,valueObject={value:value,negated:negated};if(active&&!this.isFacetActive(name,value)){active.values.push(valueObject)}else{this.activeFacets[name]={type:type,values:[valueObject]}}return this},clearFacet:function clearFacet(name,value){var active=this.activeFacets[name];active.values=_.filter(active.values,function(facetValueObject){return facetValueObject.value!==value});if(!active.values.length){delete this.activeFacets[name]}return this},toggleFacet:function toggleFacet(name,value,isNegated){var config;if(this.isFacetActive(name,value)){this.clearFacet(name,value)}else{config=this.getFacetConfig(name)||{};this.selectFacet(name,value,config.type,isNegated)}return this},clearAllFacets:function clearAllFacets(){this.activeFacets={};return this},showMoreFacets:function showMoreFacets(facet,facetName,step){if(facet.displayingAll){return $q.resolve()}step=step||5;var start=facet.facetValues.length+1;var limit=start+step-1;return this.valuesFromConstraint(facetName,{start:start,limit:limit}).then(function(resp){var newFacets=resp&&resp["values-response"]&&resp["values-response"]["distinct-value"];facet.displayingAll=!newFacets||newFacets.length<limit-start;_.each(newFacets,function(newFacetValue){facet.facetValues.push({name:newFacetValue._value,value:newFacetValue._value,count:newFacetValue.frequency})});return facet})},getParams:function getParams(){var page=this.getPage(),facetParams=this.getFacetParams(),facets=facetParams.facets,negated=facetParams.negatedFacets,params={},prefix=this.getParamsPrefix();if(facets.length&&this.options.params.facets!==null){params[prefix+this.options.params.facets]=facets}if(negated.length&&this.options.params.negatedFacets!==null){params[prefix+this.options.params.negatedFacets]=negated}if(page>1&&this.options.params.page!==null){params[prefix+this.options.params.page]=page}if(this.qtext&&this.options.params.qtext!==null){params[prefix+this.options.params.qtext]=this.qtext}if(this.options.sort&&this.options.params.sort!==null){params[prefix+this.options.params.sort]=this.options.sort}return params},getFacetParams:function getFacetParams(){var self=this,facetQuery=self.getFacetQuery(),queries=[],facets={facets:[],negatedFacets:[]};queries=(facetQuery["or-query"]||facetQuery["and-query"]).queries;_.each(queries,function(query){var queryType=_.keys(query)[0],constraint,name,arrayToPushTo;if(queryType==="not-query"){constraint=query[queryType][_.keys(query[queryType])[0]];arrayToPushTo=facets.negatedFacets}else{constraint=query[queryType];arrayToPushTo=facets.facets}name=constraint["constraint-name"];_.each(constraint.value||constraint.uri||constraint.text,function(value){if(/\s+/.test(value)&&!/^"(.*)"$/.test(value)){value='"'+value+'"'}arrayToPushTo.push(name+self.options.params.separator+value)})});return facets},getCurrentParams:function getCurrentParams(params){var prefix=this.getParamsPrefix();params=_.pick(params||$location.search(),this.getParamsKeys());_.chain(this.options.params).pick(["facets","negatedFacets"]).values().each(function(key){var name=prefix+key;if(params[name]){params[name]=asArray(params[name])}}).value();return params},fromParams:function fromParams(params){var self=this,paramsConf=this.options.params,facets=null,negatedFacets=null,optionPromise=null;params=this.getCurrentParams(params);this.fromParam(paramsConf.qtext,params,this.setText.bind(this),this.setText.bind(this,null));this.fromParam(paramsConf.page,params,this.setPage.bind(this),this.setPage.bind(this,1));this.fromParam(paramsConf.sort,params,this.setSort.bind(this));self.clearAllFacets();facets=this.fromParam(paramsConf.facets,params,_.identity);negatedFacets=this.fromParam(paramsConf.negatedFacets,params,_.identity);if(!(facets||negatedFacets)){return $q.resolve()}optionPromise=self.results.facets?$q.resolve(undefined):self.getStoredOptions();return optionPromise.then(function(options){if(facets){self.fromFacetParam(facets,options)}if(negatedFacets){self.fromFacetParam(negatedFacets,options,true)}})},fromParam:function fromParam(name,params,callback,defaultCallback){var prefixedName=this.getParamsPrefix()+name,value=params[prefixedName];if(name===null){return}if(!value){if(defaultCallback){defaultCallback.call(this)}return}if(_.isString(value)){value=decodeParam(value)}return callback.call(this,value)},fromFacetParam:function fromFacetParam(param,storedOptions,isNegated){var self=this,values=_.map(asArray(param),decodeParam),negated=isNegated||false;_.each(values,function(value){var tokens=value.split(self.options.params.separator),facetName=tokens[0],facetValue=tokens[1],facetInfo=self.getFacetConfig(facetName,storedOptions)||{};if(!facetInfo.type){console.error("don't have facets or options for '"+facetName+"', falling back to un-typed range queries")}self.selectFacet(facetName,facetValue,facetInfo.type,negated)})},getFacetConfig:function getFacetConfig(name,storedOptions){var config=null;if(storedOptions){config=_.chain(storedOptions.options.constraint).filter({name:name}).first().clone().value();config.type=config.collection?"collection":config.custom?"custom":config.range.type}else if(!!this.results.facets&&this.results.facets[name]){config=this.results.facets[name]}return config},locationChange:function locationChange(newUrl,oldUrl,params){params=this.getCurrentParams(params);var shouldUpdate=pathsEqual(newUrl,oldUrl)&&!_.isEqual(this.getParams(),params);if(!shouldUpdate){return $q.reject()}return this.fromParams(params)},getStoredOptions:function getStoredOptions(name){var self=this;name=name||this.getQueryOptions();if(this.storedOptions[name]){return $q.resolve(this.storedOptions[name])}return mlRest.queryConfig(name).then(function(response){self.storedOptions[name]=response.data;return self.storedOptions[name]})},getAllStoredOptions:function getAllStoredOptions(names){var self=this,result={};return $q.all(_.map(names,self.getStoredOptions.bind(self))).then(function(){_.each(names,function(name){result[name]=self.storedOptions[name]});return result})},suggest:function suggest(qtext,options){var params={"partial-q":qtext,format:"json",options:_.isString(options)&&options||this.getSuggestOptions()||this.getQueryOptions()};var combined=this.getCombinedQuerySync();if(_.isObject(options)){combined.search.options=options}return mlRest.suggest(params,combined).then(function(response){return response.data})},valuesFromConstraint:function valuesFromConstraint(name,params){var self=this;return this.getStoredOptions().then(function(storedOptions){var constraint=getConstraint(storedOptions,name);if(!constraint){return $q.reject(new Error("No constraint exists matching "+name))}if(constraint.range&&(constraint.range.bucket||constraint.range["computed-bucket"])){return $q.reject(new Error("Can't get values for bucketed constraint "+name))}if(constraint.custom){return $q.reject(new Error("Can't get values for custom constraint "+name))}var newOptions=valueOptionsFromConstraint(constraint);return self.values(name,params,newOptions)})},values:function values(name,params,options){var self=this,combined=this.getCombinedQuerySync();if(!options&&params&&params.options&&!(params.start||params.limit)){options=params;params=null}params=params||{};params.start=params.start!==undefined?params.start:1;params.limit=params.limit!==undefined?params.limit:20;params.options=self.getQueryOptions();if(_.isObject(options)){combined.search.options=options}return mlRest.values(name,params,combined).then(function(response){return response.data})},search:function search(adhoc){var self=this;var params={start:this.start,pageLength:this.getPageLength(),transform:this.getTransform(),options:this.getQueryOptions()};if(adhoc){var combined=this.getCombinedQuerySync();if(adhoc.search){combined.search=adhoc.search}else if(adhoc.options){combined.search.options=adhoc.options}else if(adhoc.query){combined.search.query=adhoc.query}else{combined.search.options=adhoc}}else{params.structuredQuery=this.getQuery();params.q=this.getText()}return mlRest.search(params,combined).then(function(response){var results=response.data;if(!combined){self.results=results}self.transformMetadata(results.results);self.annotateActiveFacets(results.facets);if(self.options.includeAggregates){return self.getAggregates(results.facets).then(function(){return results})}return results})},annotateActiveFacets:function annotateActiveFacets(facets){var self=this;_.forIn(facets,function(facet,name){var selected=self.activeFacets[name];if(selected){_.chain(facet.facetValues).filter(function(value){return self.isFacetActive(name,value.name)}).each(function(value){facet.selected=value.selected=true;value.negated=self.isFacetNegated(name,value.name)}).value()}if(facet.type==="bucketed"||facet.type==="custom"){facet.displayingAll=true}})},getAggregates:function getAggregates(facets){var self=this;return self.getStoredOptions().then(function(storedOptions){var promises=[];try{_.forIn(facets,function(facet,facetName){var facetType=facet.type,constraint=getConstraint(storedOptions,facetName);if(!constraint){throw new Error("No constraint exists matching "+facetName)}var newOptions=valueOptionsFromConstraint(constraint);newOptions.values.aggregate=[{apply:"count"},{apply:"min"},{apply:"max"}];var numberTypes=["xs:int","xs:unsignedInt","xs:long","xs:unsignedLong","xs:float","xs:double","xs:decimal"];if(_.includes(numberTypes,facetType)){newOptions.values.aggregate=newOptions.values.aggregate.concat([{apply:"sum"},{apply:"avg"}])}promises.push(self.values(facetName,{start:1,limit:0},newOptions).then(function(resp){var aggregates=resp&&resp["values-response"]&&resp["values-response"]["aggregate-result"];_.each(aggregates,function(aggregate){facet[aggregate.name]=aggregate._value})}))})}catch(err){return $q.reject(err)}return $q.all(promises)})},transformMetadata:function transformMetadata(result){var self=this,metadata;if(_.isArray(result)){_.each(result,_.bind(this.transformMetadata,self));return}metadata=result.metadata;result.metadata={};_.each(metadata,function(obj){var key=_.without(_.keys(obj),"metadata-type")[0],type=obj["metadata-type"],value=obj[key],shortKey=null,prefix=null,ns=null;ns=key.replace(/^\{([^}]+)\}.*$/,"$1");prefix=self.getNamespacePrefix(ns);if(prefix){shortKey=key.replace(/\{[^}]+\}/,prefix+":")}else{shortKey=key}if(!result.metadata[shortKey]){result.metadata[shortKey]={"metadata-type":type,values:[]}}result.metadata[shortKey].values.push(value)})},getStructuredQuery:function getStructuredQuery(){console.log("Warning, MLSearchContext.getStructuredQuery is deprecated, and will be removed in the next release!\n"+"Use MLSearchContext.getQuery in it's place");return this.getQuery.apply(this,arguments)},serializeStructuredQuery:function serializeStructuredQuery(){console.log("Warning, MLSearchContext.serializeStructuredQuery is deprecated, and will be removed in the next release!\n"+"Use MLSearchContext.getParams in it's place");return this.getParams.apply(this,arguments)}});function decodeParam(value){return decodeURIComponent(value.replace(/\+/g,"%20"))}function pathsEqual(newUrl,oldUrl){function pathName(href){var x=document.createElement("a");x.href=href;return x.pathname}return pathName(newUrl)===pathName(oldUrl)}function getConstraint(storedOptions,name){return storedOptions&&storedOptions.options&&storedOptions.options.constraint&&_.filter(asArray(storedOptions.options.constraint),{name:name})[0]}function valueOptionsFromConstraint(constraint){var options={constraint:asArray(constraint),values:asArray(_.cloneDeep(constraint))};options.values[0]["values-option"]=constraint.range&&constraint.range["facet-option"];return options}function asArray(){var args;if(arguments.length===1){if(Array.isArray(arguments[0])){args=arguments[0]}else{args=[arguments[0]]}}else{args=[].slice.call(arguments)}return args}})();